# Release a new version with git tag, Github release + artifact uploading
name: Release

# This workflow is triggered manually
on:
  workflow_dispatch:

jobs:
  
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      # Update project version via npm. Dicards "v" prefix
      - name: Update project version
        id: update-version
        run: |
          export newVersion=$(npm --no-git-tag-version version patch)
          echo ::set-output name=newVersion::${newVersion:1}

      # Build project (keep it simple)
      - name: Build project
        run: npm install && npm run build

      # Commit and push new release while retrieving commit hash
      # that will be used to create tag in next step  
      - name: Commit & push new version
        id: push-new-version
        run: |
          git config --global user.name 'gh-action'
          git config --global user.email 'gh-action@blockost.com'
          git commit -am "Release ${{ steps.update-version.outputs.newVersion }}"
          git push
          echo ::set-output name=newCommitSha::$(git rev-parse HEAD)

      - name: Create new release + upload build artifact
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.update-version.outputs.newVersion }}
          # Use empty description because we have nothing to say!
          body: ""
          tag_name: ${{ steps.update-version.outputs.newVersion }}
          target_commitish: ${{ steps.push-new-version.outputs.newCommitSha }}
          files: dist/aws-connect-cli
          fail_on_unmatched_files: true
